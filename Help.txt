Ec2
ubuntu
open port 8080
tcp for custom ip
==============================================================================================================Connect EC2 with putty
download a new key pair 
open putty gen
load the pem file
save as private key with a name
open putty now
1.hostname		open ur ec2 instance-->connect-->ec2-3-108-65-46.ap-south-1.compute.amazonaws.com
2.username		in putty -->connection-->data-->
3.auth file   	ssh-->auth-->point to the file. 
===============================================================================================================install java in ec2 ubuntu
sudo su 
apt-get update
clear
sudo apt install openjdk-8-jdk
java -version
javac -version 
apt install maven
mvn --version 
Add Repository key to the system==================================================================
wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
echo deb http://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list 
apt-get update
apt install jenkins 
open bellow url::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
http://ec2-3-108-65-46.ap-south-1.compute.amazonaws.com:8080/
copy the file path from UI
cat /var/lib/jenkins/secrets/initialAdminPassword
copy the password
paste in UI and good to go 
install all sugested plugin 
admin/admin/erabhijimi@gmail.com 

Setup Jenkins Slave+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
create the EC2 instance and install java/maven on it
create user:		 useradd -m abhijimi
create folder:		 sudo -u abhijimi mkdir /home/abhijimi/.ssh

Generate a public Key++++++++++++++++++++++++++++++++++https://www.ssh.com/academy/ssh/keygen++++++++++++++++++++++++++++
root@ip-172-31-9-230:/home/ubuntu# ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /root/.ssh/id_rsa
Your public key has been saved in /root/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:zj2A8w9ImYvNr5aU+oNf7XvOwvp9s1JZ3XmRdznXC+g root@ip-172-31-9-230
The key's randomart image is:
+---[RSA 3072]----+
|            .   +|
|           . . ==|
|          .   . @|
|       +   E   o=|
|      *.S      o.|
|     =oB +    o  |
|    .+=.*.+  .   |
|    o +o +o+o o  |
|     ++ooo==+o.o |
+----[SHA256]-----+
root@ip-172-31-9-230:/home/ubuntu#
copy the public key,

root@ip-172-31-9-230:~/.ssh# cat /root/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtjKeA11ulrhw1fLrT+GI2Rb653doj4ckoNXcUUiher9wBsKfoegpmBdr8/fOUqBoGpamiZ7GGMtOR1SpBG2MFDhLkvGbNqsJxrJW4HSEa4lwPw8S+UaUrJaPoKMogz7P7fy0z5tW1sQazAr5y3Trt8r28k6BvX8Va9xdIB/K17n20OcgMsyEYJBbRBBJHcfYjw6czp4te/85kSod1AHzCeKwb5hg6xJBIxwbcH1k6hnWZD4WsNf9vke/iPAnQj9vOl/LTrgtxPv5cuKQmlnr2mewlEmCWnwcvNhn5YfreP0oPVkSjYRJFYBFHPeiPNpkzxKyFoExEx145v+1ZG2tCZKlbfUUXGhCCGq4MtYnW4K9CbRNb92ouR9Nl4s3tcil3ZFtYHViiDtmTZzheuppuW1Dyy+VIwZu/fFDJZ42HmHWf94e8/sTWrpuK0f6wwUsz0oM2ZH3Gf/Tw9CntUue1dwQqp91A+/fQuik+Ov2gyYeFJdeHZEmBayj0Q6hgNvM= root@ip-172-31-9-230

====================================================================================================================================
Paste the ke to bellofile in worker box,
sudo -u abhijimi vi /home/abhijimi/.ssh/authorized_keys

Now u can ssh from master to worker,
root@ip-172-31-9-230:~/.ssh# ssh abhijimi@172.31.35.197
The authenticity of host '172.31.35.197 (172.31.35.197)' can't be established.
ECDSA key fingerprint is SHA256:4eWxD8KvWZ0TiFBw8M6Ro6KQql6ufVzloASEcOhx+Ks.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '172.31.35.197' (ECDSA) to the list of known hosts.
Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-1045-aws x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Tue Jul 27 13:03:15 UTC 2021

  System load:  0.0               Processes:             114
  Usage of /:   23.8% of 7.69GB   Users logged in:       1
  Memory usage: 27%               IPv4 address for eth0: 172.31.35.197
  Swap usage:   0%


91 updates can be applied immediately.
50 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable



The programs included with the Ubuntu system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by
applicable law.

$ hostname
ip-172-31-35-197
$
===========================================================================================================copy known_hosts to /var/lib/jenkins/.ssh
sudo cp ~/.ssh/known_hosts /var/lib/jenkins/.ssh
------------------------------------------------------------------------------------------------------------Register Worker node in Jenkins UI
Manage jenkins-->manage cloud-->admin/admin-->new Node-->(Register the slave node)MyWorkerNode-->OK-->/home/abhijimi(Build will run here)-->Labels(MyWorkerNode)-->
Launch via ssh-->(Worker Ip addr)172.31.35.197-->
Credentials-->Add-->Jenkins-->SSh username with private key-->copy the cirt from master at@ cat ~/.ssh/id_rsa	add it-->
select the one u have created and next "manually trusted key verification strategy" and save it.
==============================================================================================================Setup EKS() cluster in AWS::https://www.coachdevops.com/2020/10/create-eks-cluster-by-eksctl-how-to.html
Install the AWS CLI version 2
open powershell as admin,
choco install eksctl
choco install kubernetes-cli
aws configure:

---------------------------------------------------------------------------------------------https://www.cidevops.com/2020/12/deploy-springboot-docker-app-into.html
manage jenkins-->manage plugins-->available-->Docker,Docker Pipeline,k8 Continious deploy ,
configure eks cluster.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Create the jenkins pipeline,


1.Create cred for dockerhub:
add new->username/password/dockerhub(ID)
2.configure kubectl as well!!!!!!!!!!!!!!!!!!!!!!
3.Create the Jenkins Pipeline,
	1.Create a new pipeline job.
	2.Go to pipeline tab
		a. checkout code
		b. Build code 
		c. Build and push image to docker hub
		
4.Create Maven3 variable under Global tool configuration in Jenkins



